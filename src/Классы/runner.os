#Использовать logos
#Использовать tempfiles
#Использовать fs

Перем ВерсияПлагина;
Перем Лог;
Перем Обработчик;
Перем КомандыПлагина;

Перем ИмяПроекта;
Перем ИмяМодуля;
Перем РабочееПространство;
Перем ИмяРасширения;
Перем ИмяБазовогоПроекта;

Перем ИмяФайлаДампаКонфигурации;
Перем ИмяФайлаИзменений;

#Область Интерфейс_плагина

// Возвращает версию плагина
//
//  Возвращаемое значение:
//   Строка - текущая версия плагина
//
Функция Версия() Экспорт
	Возврат ВерсияПлагина;
КонецФункции

// Возвращает приоритет выполнения плагина
//
//  Возвращаемое значение:
//   Число - приоритет выполнения плагина
//
Функция Приоритет() Экспорт
	Возврат 0;
КонецФункции

// Возвращает описание плагина
//
//  Возвращаемое значение:
//   Строка - описание функциональности плагина
//
Функция Описание() Экспорт
	Возврат "Плагин добавляет возможность выгрузки с помощью vanessa-runner."
	+ " Важно: Для работы плагина необходимы установленные EDT и Ring";
КонецФункции

// Возвращает подробную справку к плагину
//
//  Возвращаемое значение:
//   Строка - подробная справка для плагина
//
Функция Справка() Экспорт
	Возврат "Справка плагина";
КонецФункции

// Возвращает имя плагина
//
//  Возвращаемое значение:
//   Строка - имя плагина при подключении
//
Функция Имя() Экспорт
	Возврат "runner";
КонецФункции

// Возвращает имя лога плагина
//
//  Возвращаемое значение:
//   Строка - имя лога плагина
//
Функция ИмяЛога() Экспорт
	Возврат "oscript.lib.gitsync.plugins.edtExport";
КонецФункции

#КонецОбласти

#Область Подписки_на_события

Процедура ПриАктивизации(СтандартныйОбработчик) Экспорт
	
	Обработчик = СтандартныйОбработчик;
	
КонецПроцедуры

// BSLLS:UnusedParameters-off
Процедура ПередНачаломВыполнения(ПутьКХранилищу, КаталогРабочейКопии) Экспорт
	// BSLLS:UnusedParameters-on
	
	ИмяРасширения = Обработчик.ПолучитьИмяРасширения();
	
КонецПроцедуры

Процедура ПриРегистрацииКомандыПриложения(ИмяКоманды, КлассРеализации) Экспорт
	
	Лог.Отладка("Ищу команду <%1> в списке поддерживаемых", ИмяКоманды);
	
	
КонецПроцедуры

Процедура ПриПолученииПараметров(ПараметрыКоманды) Экспорт
	
КонецПроцедуры

// BSLLS:UnusedParameters-off
Процедура ПередСборкойCFФайла(
	УправлениеКонфигуратором,
	КаталогРабочейКопииВрем,
	Файлcf,
	СтандартнаяОбработка) Экспорт
	// BSLLS:UnusedParameters-on
	
	Лог.Информация(Обработчик.ТекущаяВерсияПлатформы);
	Лог.Отладка("Начинаю cf runner-ом");
	Лог.Отладка("Путь: %1", Файлcf);

	Контекст  = УправлениеКонфигуратором.ПолучитьКонтекст();
	ВерсияПлатформы  = Обработчик.ТекущаяВерсияПлатформы;



	
	Команда = Новый Команда;
	
	Параметры = Новый Массив();
	
	Если Не ПустаяСтрока(ВерсияПлатформы)  Тогда
		Параметры.Добавить(СтрШаблон(" --v8version %1", ВерсияПлатформы));
	КонецЕсли;
	
	Команда.УстановитьСтрокуЗапуска(СтрШаблон("runner compile -s %1 -o ""%2""", КаталогРабочейКопииВрем, Файлcf));
	Команда.УстановитьКодировкуВывода(КодировкаТекста.ANSI);
	Команда.ДобавитьЛогВыводаКоманды("oscript.lib.gitsync.plugins.runnerExport");
	Команда.ДобавитьПараметры(Параметры);
	Команда.УстановитьИсполнениеЧерезКомандыСистемы(Истина);
	Команда.ПоказыватьВыводНемедленно(Ложь);
	Команда.УстановитьПравильныйКодВозврата(0);
	КодВозврата = Команда.Исполнить();
	
	Лог.Отладка("Код возврата runner: %1", КодВозврата);
	
	СтандартнаяОбработка = Ложь;
	// КаталогРабочейКопииВрем = ВременноеРабочееПространство;
	
КонецПроцедуры

#КонецОбласти

#Область Вспомогательные_процедуры_и_функции

Процедура ДополнитьИнкрементнуюВыгрузкуПроекта(Конфигуратор, КаталогВыгрузки)
	
	ПутьКФайлуДополнительнойВыгрузки = ВременныеФайлы.НовоеИмяФайла();
	
	СформироватьСписокДополнительныхОбъектов(КаталогВыгрузки, ПутьКФайлуДополнительнойВыгрузки);
	
	Если ФС.ФайлСуществует(ПутьКФайлуДополнительнойВыгрузки) Тогда
		
		Параметры = Конфигуратор.ПолучитьПараметрыЗапуска();
		
		Параметры.Добавить(СтрШаблон("/DumpConfigToFiles ""%1""", КаталогВыгрузки));
		Параметры.Добавить(СтрШаблон("-listFile ""%1""", ПутьКФайлуДополнительнойВыгрузки));
		
		Конфигуратор.ВыполнитьКоманду(Параметры);
		
		ВременныеФайлы.УдалитьФайл(ПутьКФайлуДополнительнойВыгрузки);
		
	КонецЕсли;
	
КонецПроцедуры

// Возращает имя родительского объекта меданных
//
// Параметры:
//   ПолноеИмяОбъекта - Строка - Полное имя объекта метаданных.
//
//  Возвращаемое значение:
//   Строка - имя родительского объекта
//
Функция РодительОбъекта(ПолноеИмяОбъекта)
	
	ЧастиИмени = СтрРазделить(ПолноеИмяОбъекта, ".");
	
	Если ЧастиИмени.Количество() > 1 Тогда
		
		ТипОбъектаМетаданных = ЧастиИмени[0];
		ИмяОбъектаМетаданных = ЧастиИмени[1];
		
	Иначе
		Возврат ПолноеИмяОбъекта;
	КонецЕсли;
	
	Если ЭтоРодительВерхнегоУровня(ТипОбъектаМетаданных) Тогда
		Возврат ТипОбъектаМетаданных;
	Иначе
		Возврат СтрШаблон("%1.%2", ТипОбъектаМетаданных, ИмяОбъектаМетаданных);
	КонецЕсли;
	
КонецФункции

Функция ЭтоВложенныйОбъект(ПолноеИмяОбъекта)
	
	ИндексВложенногоТипа = 2;

	ЧастиИмени = СтрРазделить(ПолноеИмяОбъекта, ".");
	Если ЧастиИмени.Количество() > ИндексВложенногоТипа Тогда
		ТипВложенногоОбъекта = ЧастиИмени[ИндексВложенногоТипа];
	Иначе
		Возврат Ложь;
	КонецЕсли;

	Возврат (СтрНайти("Form,Template,Recalculation,Subsystem", ТипВложенногоОбъекта) > 0);

КонецФункции

Функция ЭтоРодительВерхнегоУровня(Родитель)
	
	Возврат (СтрНайти("Configuration,Language", Родитель) > 0);

КонецФункции

Функция ИзмененныеОбъектыМетаданных(ПутьКФайлуИзменений)
	
	РегулярноеВыражение = Новый РегулярноеВыражение("^(?>New|Modified):(\S+)\s*$");
	
	ЧтениеФайла = Новый ЧтениеТекста(ПутьКФайлуИзменений);
	Совпадения = РегулярноеВыражение.НайтиСовпадения(ЧтениеФайла.Прочитать());
	ЧтениеФайла.Закрыть();
	
	ИзмененныеОбъекты = Новый Соответствие;
	ИзмененныеОбъекты.Вставить("Configuration", Новый Массив);
	ИзмененныеОбъекты.Вставить("Language", Новый Массив);
	
	Для Каждого Совпадение Из Совпадения Цикл
		
		ИмяОбъектаМетаданных = Совпадение.Группы[1].Значение;
		Родитель = РодительОбъекта(ИмяОбъектаМетаданных);
		
		ПодчиненныеОбъекты = ИзмененныеОбъекты.Получить(Родитель);
		Если ПодчиненныеОбъекты = Неопределено Тогда
			ПодчиненныеОбъекты = Новый Массив;
			ИзмененныеОбъекты.Вставить(Родитель, ПодчиненныеОбъекты);
		КонецЕсли;
		
		ПодчиненныеОбъекты.Добавить(ИмяОбъектаМетаданных);
		
	КонецЦикла;
	
	Возврат ИзмененныеОбъекты;
	
КонецФункции

Функция ДополнительныеОбъектыКВыгрузке(ИзмененныеОбъекты, ПутьКФайлуВерсийМетаданных)
	
	СписокОбъектов = Новый Массив;
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ПутьКФайлуВерсийМетаданных);

	ЧтениеXML.ПерейтиКСодержимому(); // ConfigDumpInfo
	ЧтениеXML.Прочитать(); // ConfigVersions
	ЧтениеXML.Прочитать(); // Metadata

	Пока ЧтениеXML.Имя = "Metadata" Цикл

		ИмяОбъекта = ЧтениеXML.ЗначениеАтрибута("name");
		Родитель = РодительОбъекта(ИмяОбъекта);

		Если ЭтоВложенныйОбъект(ИмяОбъекта) 
			ИЛИ ИмяОбъекта = Родитель
			ИЛИ ЭтоРодительВерхнегоУровня(Родитель) Тогда

			Изменения = ИзмененныеОбъекты.Получить(Родитель);
			Если Изменения <> Неопределено И Изменения.Найти(ИмяОбъекта) = Неопределено	Тогда
				СписокОбъектов.Добавить(ИмяОбъекта);
			КонецЕсли;

		КонецЕсли;

		ЧтениеXML.Пропустить();
		ЧтениеXML.Прочитать();

	КонецЦикла;
	
	ЧтениеXML.Закрыть();
	
	Возврат СписокОбъектов;
	
КонецФункции

Процедура СформироватьСписокДополнительныхОбъектов(КаталогВыгрузки, ПутьКФайлуДополнительнойВыгрузки)
	
	ПутьКФайлуИзменений = ОбъединитьПути(КаталогВыгрузки, ИмяФайлаИзменений);
	ПутьКФайлуВерсийМетаданных = ОбъединитьПути(КаталогВыгрузки, ИмяФайлаДампаКонфигурации);
	
	ИзмененныеОбъекты = ИзмененныеОбъектыМетаданных(ПутьКФайлуИзменений);
	ДополнительныеОбъектыКВыгрузке = ДополнительныеОбъектыКВыгрузке(ИзмененныеОбъекты, ПутьКФайлуВерсийМетаданных);
	
	Если ДополнительныеОбъектыКВыгрузке.Количество() > 0 Тогда
		
		ФайлОбъектовВыгрузки = Новый ТекстовыйДокумент();
		Для Каждого ДополнительныйОбъект Из ДополнительныеОбъектыКВыгрузке Цикл
			ФайлОбъектовВыгрузки.ДобавитьСтроку(ДополнительныйОбъект);
		КонецЦикла;
		ФайлОбъектовВыгрузки.Записать(ПутьКФайлуДополнительнойВыгрузки, КодировкаТекста.UTF8);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура Инициализация()
	
	ВерсияПлагина = "0.0.1";
	Лог = Логирование.ПолучитьЛог(ИмяЛога());
	КомандыПлагина = Новый Массив;
	КомандыПлагина.Добавить("sync");
	
	ИмяРасширения = "";
	РабочееПространство = "";
	ИмяБазовогоПроекта = "";
	
	ИмяФайлаДампаКонфигурации = "ConfigDumpInfo.xml";
	ИмяФайлаИзменений = "dumplist.txt"; // файл используется в 2х плагинах - increment и edtExport
	
КонецПроцедуры

#КонецОбласти

Инициализация();
