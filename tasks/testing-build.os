#Использовать gitrunner
#Использовать tempfiles
#Использовать fs

Перем Лог;

Процедура ПолучитьИсходники(Знач URLРепозитория, Знач Ветка, Знач Каталог)

	ГитРепозиторий = Новый ГитРепозиторий;

	ГитРепозиторий.УстановитьРабочийКаталог(Каталог);

	ГитРепозиторий.КлонироватьРепозиторий(URLРепозитория, Каталог);
	ГитРепозиторий.ПерейтиВВетку(Ветка);

КонецПроцедуры

Процедура УстановитьПакет(Знач Каталог, ПутьКМанифестуСборки)
	
	Лог.Информация("Каталог сборки <%1>", Каталог);

	Лог.Информация("Сборка пакета библиотеки");
	КомандаOpm = Новый Команда;
	КомандаOpm.УстановитьРабочийКаталог(Каталог);
	КомандаOpm.УстановитьКоманду("opm");
	КомандаOpm.ДобавитьПараметр("build");	
	КомандаOpm.ДобавитьПараметр("--mf");	
	КомандаOpm.ДобавитьПараметр(ПутьКМанифестуСборки);	
	КомандаOpm.ДобавитьПараметр(Каталог);	
	КомандаOpm.ДобавитьЛогВыводаКоманды("task.install-opm");

	КодВозврата = КомандаOpm.Исполнить();

	Если КодВозврата <> 0  Тогда
		ВызватьИсключение КомандаOpm.ПолучитьВывод();
	КонецЕсли;

	МассивФайлов = НайтиФайлы(Каталог, "*.ospx");

	Если МассивФайлов.Количество() = 0 Тогда
		ВызватьИсключение Новый ИнформацияОбОшибке("Ошибка создания пакета gitsync", "Не найден собранный файл пакета gitsync");
	КонецЕсли;

	ФайлПлагина = МассивФайлов[0].ПолноеИмя;

	ИсполнительGitSync = ОбъединитьПути(ТекущийСценарий().Каталог, "..", "bin/gitsync/src/cmd/gitsync.os");

	// ФС.ОбеспечитьКаталог(КаталогПроектаGitsync);

	// Лог.Информация("Установка в каталог проекта <%1>", КаталогПроектаGitsync);

	Лог.Информация("Установка пакета из файла <%1>", ФайлПлагина);

	КомандаOpm = Новый Команда;
	КомандаOpm.УстановитьРабочийКаталог(Каталог);
	КомандаOpm.УстановитьКоманду("oscript");
	КомандаOpm.ДобавитьПараметр("-encoding=utf-8");	
	КомандаOpm.ДобавитьПараметр(ИсполнительGitSync);	
	КомандаOpm.ДобавитьПараметр("p c -a");
	
	КомандаOpm = Новый Команда;
	КомандаOpm.УстановитьРабочийКаталог(Каталог);
	КомандаOpm.УстановитьКоманду("oscript");
	КомандаOpm.ДобавитьПараметр("-encoding=utf-8");	
	КомандаOpm.ДобавитьПараметр(ИсполнительGitSync);	
	КомандаOpm.ДобавитьПараметр("p i");
	КомандаOpm.ДобавитьПараметр("-f");	
	КомандаOpm.ДобавитьПараметр(ФайлПлагина);	
	КомандаOpm.ДобавитьЛогВыводаКоманды("task.install-opm");

	КодВозврата = КомандаOpm.Исполнить();

	Если КодВозврата <> 0  Тогда
		ВызватьИсключение СтрШаблон("Ошибка установки плагинов из <%1> по причине <%2>", ФайлПлагина, КомандаOpm.ПолучитьВывод());
	КонецЕсли;

	ВременныеФайлы.УдалитьФайл(ФайлПлагина);

КонецПроцедуры

Процедура ПолезнаяРабота()

	ПутьКМанифестуСборки = "packagedef";

	// ПолучитьИсходники(URLРепозитория, Ветка, КаталогСборки);
	УстановитьПакет(ОбъединитьПути(ТекущийСценарий().Каталог, ".."), ПутьКМанифестуСборки);

	// ВременныеФайлы.УдалитьФайл(КаталогСборки);

КонецПроцедуры

Лог = Логирование.ПолучитьЛог("task.install-opm");

ПолезнаяРабота();


